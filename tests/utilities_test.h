#include <gtest/gtest.h>
#include "../src/utilities.cpp"



class shift_test: public::testing::Test {
    
protected:
    virtual void SetUp() {
        
        
    }
    
    virtual void TearDown() {
        
    }

};



TEST_F(shift_test, test_left_shifts ){
    
    uint64_t to_shift[2];
    
    // number: '01011010010011011000011111000001110100010010111110001101111110010000110111011111011011010001110110110011101001000011011110000001'
    to_shift[0] = 6507006303128227321;      //  binary: '0101101001001101100001111100000111010001001011111000110111111001'
    to_shift[1] = 999637616634902401;       //  binary: '0000110111011111011011010001110110110011101001000011011110000001'
    
    
    // shift 10
    // number: '00110110000111110000011101000100101111100011011111100100001101110111110110110100011101101100111010010000110111100000010000000000'
    
    // to_shift[0] == '0011011000011111000001110100010010111110001101111110010000110111'    3899843794156643383
    // to_shift[1] == '0111110110110100011101101100111010010000110111100000010000000000'    9057995380114719744
    
    
    shift_bits_in_array_left( to_shift , 10 );
    
    ASSERT_EQ( 3899843794156643383, to_shift[0] );
    ASSERT_EQ( 9057995380114719744, to_shift[1] );
    
}



TEST_F(shift_test, test_right_shifts ){
    
    uint64_t to_shift[2];
    
    // number: '00000000000101101001001101100001111100000111010001001011111000110111111001000011011101111101101101000111011011001110100100001101'
    to_shift[0] = 6507006303128227321;      //  binary: '0101101001001101100001111100000111010001001011111000110111111001'
    to_shift[1] = 999637616634902401;       //  binary: '0000110111011111011011010001110110110011101001000011011110000001'
    
    
    // shift 10
    // number: '00110110000111110000011101000100101111100011011111100100001101110111110110110100011101101100111010010000110111100000010000000000'
    
    // to_shift[0] == '0000000000010110100100110110000111110000011101000100101111100011'    6354498342898659
    // to_shift[1] == '0111111001000011011101111101101101000111011011001110100100001101'    9098247455898396941
    
    
    shift_bits_in_array_right( to_shift , 10 );
    
    ASSERT_EQ( 6354498342898659, to_shift[0] );
    ASSERT_EQ( 9098247455898396941, to_shift[1] );
    
}

